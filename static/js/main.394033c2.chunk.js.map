{"version":3,"sources":["catApi.js","CatLoader.js","Categories.js","CatList.js","App.js","index.js"],"names":["fetchRandomCat","_fetchRandomCat","apply","this","arguments","_callee","data","regenerator_default","a","wrap","_context","prev","next","axios","get","then","resp","status","sent","abrupt","t0","Error","stop","FeaturedContainer","styled","figure","_templateObject","MainImage","img","_templateObject2","FormGroup","div","_templateObject3","InputWrapper","_templateObject4","TextInput","input","_templateObject5","ErrorMessage","p","_templateObject6","Button","button","_templateObject7","CatLoader","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","concat","state","url","category","inputError","duplicateImage","fetchNewCat","setState","handleSave","catItem","props","catList","indexOf","listItem","count","addListItem","handleChange","e","target","value","inherits","createClass","key","_this2","react_default","createElement","className","src","alt","type","placeholder","onChange","onClick","React","Component","ListItem","li","Categories_templateObject","ListGroup","ul","Categories_templateObject2","Categories","handleClick","handleSelect","renderCatList","keys","map","index","CategoryHeader","h2","CatList_templateObject","ImageWrapper","CatList_templateObject2","Image","CatList_templateObject3","CatList","renderImages","selected","width","height","Container","App_templateObject","MainHeader","App_templateObject2","App","selectedCategory","cats","updatedList","toConsumableArray","localStorage","setItem","JSON","stringify","selectCategory","cat","getItem","catJSON","parse","CatLoader_CatLoader","Categories_Categories","CatList_CatList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.394033c2.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport async function fetchRandomCat() {\n  try {\n    const data = await axios.get(' https://api.thecatapi.com/v1/images/search ').then(resp => {\n      if (resp.status === 200) {\n        return resp;\n      }\n    })\n    return data;\n  } catch (err) {\n    throw new Error(err)\n  }\n}","import React from 'react';\nimport styled from 'styled-components'\n\nimport { fetchRandomCat } from './catApi'\n\nconst FeaturedContainer = styled.figure`\n  width: 100%;\n  height: 450px;\n`\n\nconst MainImage = styled.img`\n  object-fit: cover;\n  object-position: center;\n  height: 100%;\n  width: 100%;\n`\n\nconst FormGroup = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: auto;\n`\n\nconst TextInput = styled.input`\n  margin-top: auto;\n  border: 1px solid black;\n  padding: 0 5px;\n`\nconst ErrorMessage = styled.p`\n  color: red;\n`\nconst Button = styled.button`\n  margin-bottom: 5px;\n  margin-left: 15px;\n  cursor: pointer;\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n`\n\nexport class CatLoader extends React.Component {\n  state = {\n    url: '',\n    category: '',\n    inputError: false,\n    duplicateImage: false\n  }\n\n  componentDidMount() {\n    fetchRandomCat().then(resp => {\n      this.setState({ url: resp.data[0].url })\n    });\n  }\n\n  fetchNewCat = () => {\n    fetchRandomCat().then(resp => {\n      this.setState({ url: resp.data[0].url, duplicateImage: false })\n    });\n  }\n\n  handleSave = () => {\n    //getting the input category from the catList\n    const catItem = this.props.catList[this.state.category];\n\n    // Checks if the user has typed anything in the input\n    if (this.state.category === '') {\n      this.setState({ inputError: true });\n    } else {\n      // Checks if that category exists to avoid errors and checks if that image is already in that category\n      if (catItem && catItem.url.indexOf(this.state.url) !== -1) {\n        // If yes, then we show an error\n        this.setState({ duplicateImage: true, inputError: false });\n      } else {\n        // If no, then we proceed and add that image to our list\n        const listItem = {\n          url: this.state.url,\n          category: this.state.category,\n          count: 1\n        };\n\n        this.setState({ inputError: false });\n        this.props.addListItem(listItem);\n      }\n    }\n\n\n  }\n\n  handleChange = (e) => {\n    // Removes the duplicate image error message once the input field is empty\n    if (e.target.value === '') {\n      this.setState({ duplicateImage: false });\n    }\n\n    // This sets our category value \n    this.setState({ category: e.target.value });\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-12 no-padding\">\n          <FeaturedContainer className=\"figure-img img-fluid col-md-12 featured-image__wrapper\">\n            <MainImage src={this.state.url} className=\"img-thumbnail\" alt=\"Featured cat\" />\n          </FeaturedContainer>\n          <FormGroup className=\"form-group flex-grid col-md-12\">\n            <InputWrapper className=\"col-md-6 no-padding\">\n              {this.state.inputError ? <ErrorMessage>Please Input a caegory to save.</ErrorMessage> : null}\n              {this.state.duplicateImage ? <ErrorMessage>This image already exists in this category, please choose another.</ErrorMessage> : null}\n              <TextInput type='text' placeholder=\"Category Name\" onChange={this.handleChange} />\n            </InputWrapper>\n            <div className=\"btn-group-vertical col-md-6 \">\n              <Button type=\"button\" className=\"btn btn-dark\" onClick={this.fetchNewCat}>Next</Button>\n              <Button type=\"button\" className=\"btn btn-success\" onClick={this.handleSave}>Save</Button>\n            </div>\n          </FormGroup>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react'\nimport styled from 'styled-components'\n\nconst ListItem = styled.li`\n  cursor: pointer;\n  transition: .2s all ease-in-out;\n  &:hover {\n    background-color: rgba(0,0,0,.2);\n  }\n`\nconst ListGroup = styled.ul`\n  padding-left: 15px;\n`\n\nexport class Categories extends React.Component {\n\n  handleClick = (category) => {\n    this.props.handleSelect(category)\n  }\n\n  renderCatList = () => {\n    return Object.keys(this.props.catList).map((category, index) => {\n      let count = this.props.catList[category].count;\n      return (\n        <ListItem key={index} className=\"list-group-item d-flex justify-content-between align-items-center\" onClick={() => this.handleClick(category)}>\n          {category}\n          <span className=\"badge badge-primary badge-pill\">{count}</span>\n        </ListItem>)\n    })\n\n  }\n  render() {\n\n    return (\n      <div className=\"row\">\n        <ListGroup className=\"col-md-12 list-group\">{this.renderCatList()}</ListGroup>\n      </div>\n    )\n  }\n}","import React from 'react'\nimport styled from 'styled-components'\n\nconst CategoryHeader = styled.h2`\n  padding: .5em 0;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst ImageWrapper = styled.figure`\n  @media screen and (min-width: 415px){\n    max-height: 200px;\n  }\n`\nconst Image = styled.img`\n  object-fit: cover;\n  object-position: center;\n  height: 100%;\n  width: 100%;\n`\n\nexport class CatList extends React.Component {\n\n  renderImages = () => {\n    let category = this.props.catList[this.props.selected];\n\n    // checks if there is a category selected in the parent\n    if (category) {\n      // Map through our list of images and output them\n      return category.url.map((url, index) => {\n        return (\n          <ImageWrapper key={index} className=\"col-xs-12 col-sm-6\">\n            <Image key={index} className=\"img-thumbnail\" width=\"200px\" height=\"200px\" src={url} alt=\"this is a cat\" />\n          </ImageWrapper>\n        )\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n        {this.props.selected ? (\n          <div className=\"col-md-12\">\n            <CategoryHeader>\n              <span>{this.props.selected}</span>\n              <span>{this.props.catList[this.props.selected].count}</span>\n            </CategoryHeader>\n            <div className=\"row\">\n              {this.renderImages()}\n            </div>\n          </div>\n        ) : null}\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport styled from 'styled-components'\n\nimport './App.css';\n\nimport { CatLoader } from './CatLoader';\nimport { Categories } from './Categories';\nimport { CatList } from './CatList';\n\n// Styled components\nconst Container = styled.div`\n  max-width: 550px;\n  margin: 2em auto;\n\n`;\n\nconst MainHeader = styled.h2`\n  text-align: center;\n`\n\nclass App extends Component {\n  state = {\n    catList: {},\n    selectedCategory: ''\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem('catList')) {\n      const catJSON = localStorage.getItem('catList');\n      this.setState({ catList: JSON.parse(catJSON) });\n    };\n  }\n\n  addListItem = (cats) => {\n    let updatedList = this.state.catList;\n    // Checks if the category exists in our cat list\n    if (updatedList[cats.category]) {\n      // Update our category counter\n      let count = updatedList[cats.category].count + 1;\n      // Spread accross our existing url's in this category and add our new url\n      let url = [...updatedList[cats.category].url, cats.url];\n      // add in our newly updated object back into the list\n      updatedList[cats.category] = { count, url };\n    } else {\n      // Create our category list with the category count and the image url\n      updatedList[cats.category] = { count: cats.count, url: [cats.url] };\n    }\n\n    // set item in our local storage and stringify\n    localStorage.setItem('catList', JSON.stringify(updatedList));\n    this.setState({ catList: updatedList })\n  }\n\n  selectCategory = (cat) => {\n    this.setState({ selectedCategory: cat })\n  }\n\n  render() {\n    return (\n      <Container className=\"container\">\n        <MainHeader>Cat-egory</MainHeader>\n        <CatLoader addListItem={this.addListItem} catList={this.state.catList} />\n        <Categories catList={this.state.catList} handleSelect={this.selectCategory} />\n        <CatList catList={this.state.catList} selected={this.state.selectedCategory} />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}