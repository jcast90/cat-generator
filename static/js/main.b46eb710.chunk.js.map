{"version":3,"sources":["catApi.js","CatLoader.js","Categories.js","CatList.js","App.js","index.js"],"names":["fetchRandomCat","_fetchRandomCat","apply","this","arguments","_callee","data","regenerator_default","a","wrap","_context","prev","next","axios","get","then","resp","status","sent","abrupt","t0","console","log","Error","stop","CatLoader","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","concat","state","url","category","fetchNewCat","setState","handleSave","listItem","count","props","addListItem","handleChange","e","target","value","inherits","createClass","key","_this2","react_default","createElement","className","src","alt","type","onChange","onClick","React","Component","Categories","handleClick","handleSelect","renderCatList","keys","catList","map","index","CatList","renderCatCategory","selected","images","width","height","Container","styled","div","_templateObject","App","selectedCategory","cats","updatedList","toConsumableArray","localStorage","setItem","JSON","stringify","selectCategory","cat","getItem","catJSON","parse","CatLoader_CatLoader","Categories_Categories","CatList_CatList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.b46eb710.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport async function fetchRandomCat() {\n  // TODO - fetch json from the http://aws.random.cat/meow or a similar random cat API\n  try {\n    const data = await axios.get(' https://api.thecatapi.com/v1/images/search ').then(resp => {\n      if (resp.status === 200) {\n        return resp;\n      }\n    })\n    return data;\n  } catch (err) {\n    console.log(err)\n    throw new Error(err)\n\n  }\n\n}","import React from 'react';\n\nimport { fetchRandomCat } from './catApi'\n\nexport class CatLoader extends React.Component {\n  state = {\n    url: '',\n    category: '',\n  }\n\n  // TODO, fetchRandomCat\n  componentDidMount() {\n    fetchRandomCat().then(resp => {\n      this.setState({ url: resp.data[0].url })\n    });\n  }\n\n  fetchNewCat = () => {\n    fetchRandomCat().then(resp => {\n      this.setState({ url: resp.data[0].url })\n    });\n  }\n\n  handleSave = () => {\n    const listItem = {\n      url: this.state.url,\n      category: this.state.category,\n      count: 1\n    }\n\n    this.props.addListItem(listItem);\n  }\n\n  handleChange = (e) => {\n    this.setState({ category: e.target.value });\n  }\n\n  render() {\n    return (\n      <div className=\"row container\">\n        <div className=\"col-md-12\">\n          <figure className=\"figure-img img-fluid col-md-12 featured-image__wrapper\">\n            <img src={this.state.url} className=\"img-thumbnail\" alt=\"Featured cat\" />\n          </figure>\n          <div className=\"form-group flex-grid\">\n            <input type='text' className=\"col-md-6\" onChange={this.handleChange} />\n            <div className=\"btn-group-vertical col-md-6\">\n              <button type=\"button\" className=\"btn btn-dark\" onClick={this.fetchNewCat}>Next</button>\n              <button type=\"button\" className=\"btn btn-success\" onClick={this.handleSave}>Save</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react'\n\nexport class Categories extends React.Component {\n\n  handleClick = (category) => {\n    this.props.handleSelect(category)\n  }\n\n  renderCatList = () => {\n    return Object.keys(this.props.catList).map((category, index) => {\n      let count = this.props.catList[category].count;\n      return <li key={index} className=\"list-group-item d-flex justify-content-between align-items-center\" onClick={() => this.handleClick(category)}>{category} <span className=\"badge badge-primary badge-pill\">{count}</span></li>\n    })\n\n  }\n  render() {\n\n    return (\n      <div className=\"row\">\n        <ul className=\"col-md-6 list-group\">{this.renderCatList()}</ul>\n      </div>\n    )\n  }\n}","import React from 'react'\n\nexport class CatList extends React.Component {\n\n  renderCatCategory = () => {\n    let category = this.props.catList[this.props.selected];\n\n    // checks if there is a category selected in the parent\n    if (category) {\n\n      // stores the images in a map\n      let images = category.url.map((url, index) => {\n        return (\n          <figure key={index} className=\"col-xs-12 col-sm-6 col-md-3\">\n            <img key={index} className=\"img-thumbnail\" width=\"200px\" height=\"200px\" src={url} alt=\"this is a cat\" />\n          </figure>\n        )\n      });\n\n      return (\n        <div className=\"col-md-12\">\n          <h2>{this.props.selected} : {category.count}</h2>\n          <div className=\"row\">\n            {images}\n          </div>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n        {this.props.selected ? this.renderCatCategory() : null}\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport styled from 'styled-components'\n\nimport './App.css';\n\nimport { CatLoader } from './CatLoader';\nimport { Categories } from './Categories';\nimport { CatList } from './CatList';\n\nconst Container = styled.div`\n  max-width: 550px;\n  margin: 0 auto;\n`;\n\nclass App extends Component {\n  state = {\n    catList: {},\n    selectedCategory: ''\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem('catList')) {\n      const catJSON = localStorage.getItem('catList');\n      this.setState({ catList: JSON.parse(catJSON) });\n    };\n  }\n\n  addListItem = (cats) => {\n    let updatedList = this.state.catList;\n    if (updatedList[cats.category]) {\n      let count = updatedList[cats.category].count + 1;\n      let url = [...updatedList[cats.category].url, cats.url];\n      updatedList[cats.category] = { count, url };\n    } else {\n      updatedList[cats.category] = { count: cats.count, url: [cats.url] };\n    }\n    localStorage.setItem('catList', JSON.stringify(updatedList));\n    this.setState({ catList: updatedList })\n  }\n\n  selectCategory = (cat) => {\n    this.setState({ selectedCategory: cat })\n  }\n\n  render() {\n    return (\n      <Container className=\"container\">\n        <h2>Cat-egory</h2>\n        <CatLoader addListItem={this.addListItem} catList={this.state.catList} />\n        <Categories catList={this.state.catList} handleSelect={this.selectCategory} selectedCategory={this.state.selectedCategory} />\n        <CatList catList={this.state.catList} selected={this.state.selectedCategory} />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}